- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Locate running EC2 instances
      vars:
        ansible_python_interpreter: /usr/local/bin/python3
      ec2_instance_info:
        region: us-east-1
        aws_access_key: ASIAWT6NTPIZP6XGYOVY
        aws_secret_key: hNbFj++A5mBedXstZk7E/R84FPThZwmRxZUjf8x1
        security_token: FwoGZXIvYXdzEJ7//////////wEaDM2uWXfbf9GYcopELCLIAZi+M2ljDlLGy6yrmQSx05stXNe50mnLVa5M/0zUn8MMIYHAVvc+Ih+5wXm+GJg9QTCTpmh6AfxDRi8gQsblYlwyEtgdW04eFph7n4tpIybykDxElyt3Jo/an/ioPSppwO6Nk4JmOM2oI7T/dwTrhyzKOGHkzp+gkhmj0kn+v/GtilarelUGhvdAp1Z6rVFCLQM9svmp6IG6nhiQUpLAiZOveXbpmwT59hq7P63B9u4DJelbRZO37+TrT2u5R+93kg+/K2jtfjdkKPGO7/4FMi17kQ27axjuaWLJv1XtV4pVBRIfHadOecB3NYdMltBnFa4S+PTgRBLxR1LwjtA=
      register: ec2_info

    - name: Launch EC2 instance
      ec2:
        instance_type: t2.small
        image: ami-085925f297f89fce1
        region: us-east-1
        key_name: test
        vpc_subnet_id: subnet-693ebd48
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: ASIAWT6NTPIZP6XGYOVY
        aws_secret_key: hNbFj++A5mBedXstZk7E/R84FPThZwmRxZUjf8x1
        security_token: FwoGZXIvYXdzEJ7//////////wEaDM2uWXfbf9GYcopELCLIAZi+M2ljDlLGy6yrmQSx05stXNe50mnLVa5M/0zUn8MMIYHAVvc+Ih+5wXm+GJg9QTCTpmh6AfxDRi8gQsblYlwyEtgdW04eFph7n4tpIybykDxElyt3Jo/an/ioPSppwO6Nk4JmOM2oI7T/dwTrhyzKOGHkzp+gkhmj0kn+v/GtilarelUGhvdAp1Z6rVFCLQM9svmp6IG6nhiQUpLAiZOveXbpmwT59hq7P63B9u4DJelbRZO37+TrT2u5R+93kg+/K2jtfjdkKPGO7/4FMi17kQ27axjuaWLJv1XtV4pVBRIfHadOecB3NYdMltBnFa4S+PTgRBLxR1LwjtA=
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from docker
      git:
        repo: "https://github.com/krystofkomanec/4IT572_semestralka.git"
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 120
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Terminate previous instances
  hosts: localhost
  connection: local

  tasks:
    - name: Terminate previous instances
      ec2:
        region: us-east-1
        state: 'absent'
        instance_ids: '{{ item.instance_id }}'
        aws_access_key: ASIAWT6NTPIZP6XGYOVY
        aws_secret_key: hNbFj++A5mBedXstZk7E/R84FPThZwmRxZUjf8x1
        security_token: FwoGZXIvYXdzEJ7//////////wEaDM2uWXfbf9GYcopELCLIAZi+M2ljDlLGy6yrmQSx05stXNe50mnLVa5M/0zUn8MMIYHAVvc+Ih+5wXm+GJg9QTCTpmh6AfxDRi8gQsblYlwyEtgdW04eFph7n4tpIybykDxElyt3Jo/an/ioPSppwO6Nk4JmOM2oI7T/dwTrhyzKOGHkzp+gkhmj0kn+v/GtilarelUGhvdAp1Z6rVFCLQM9svmp6IG6nhiQUpLAiZOveXbpmwT59hq7P63B9u4DJelbRZO37+TrT2u5R+93kg+/K2jtfjdkKPGO7/4FMi17kQ27axjuaWLJv1XtV4pVBRIfHadOecB3NYdMltBnFa4S+PTgRBLxR1LwjtA=

      loop: "{{ ec2_info.instances }}"
      loop_control:
        label: "{{ item.instance_id }}"
